{
  "_args": [
    [
      {
        "raw": "stacktrace-gps@^2.4.3",
        "scope": null,
        "escapedName": "stacktrace-gps",
        "name": "stacktrace-gps",
        "rawSpec": "^2.4.3",
        "spec": ">=2.4.3 <3.0.0",
        "type": "range"
      },
      "/Users/naascabral/Documents/Automaçao_palestra_vai_planeta/automacaoo_wikipedia/cucumber/node_modules/stacktrace-js"
    ]
  ],
  "_from": "stacktrace-gps@>=2.4.3 <3.0.0",
  "_id": "stacktrace-gps@2.4.4",
  "_inCache": true,
  "_location": "/stacktrace-gps",
  "_nodeVersion": "5.3.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/stacktrace-gps-2.4.4.tgz_1463463675914_0.8597294138744473"
  },
  "_npmUser": {
    "name": "eriwen",
    "email": "me@eriwen.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stacktrace-gps@^2.4.3",
    "scope": null,
    "escapedName": "stacktrace-gps",
    "name": "stacktrace-gps",
    "rawSpec": "^2.4.3",
    "spec": ">=2.4.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stacktrace-js"
  ],
  "_resolved": "https://registry.npmjs.org/stacktrace-gps/-/stacktrace-gps-2.4.4.tgz",
  "_shasum": "69c827e9d6d6f41cf438d7f195e2e3cbfcf28c44",
  "_shrinkwrap": null,
  "_spec": "stacktrace-gps@^2.4.3",
  "_where": "/Users/naascabral/Documents/Automaçao_palestra_vai_planeta/automacaoo_wikipedia/cucumber/node_modules/stacktrace-js",
  "bugs": {
    "url": "https://github.com/stacktracejs/stacktrace-gps/issues"
  },
  "dependencies": {
    "source-map": "0.5.6",
    "stackframe": "~0.3"
  },
  "description": "Turns partial code location into precise code location",
  "devDependencies": {
    "colors": "^1.1.2",
    "del": "^2.2.0",
    "es6-promise": "^3.0.2",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-coveralls": "^0.1.4",
    "gulp-jshint": "^2.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.1",
    "jasmine": "^2.4.1",
    "jasmine-ajax": "^3.2.0",
    "jasmine-core": "^2.4.1",
    "jshint": "^2.8.0",
    "karma": "^0.13.16",
    "karma-chrome-launcher": "^0.2.2",
    "karma-coverage": "^0.5.3",
    "karma-firefox-launcher": "^0.1.7",
    "karma-ie-launcher": "^0.2.0",
    "karma-jasmine": "^0.3.6",
    "karma-jasmine-ajax": "^0.1.13",
    "karma-opera-launcher": "^0.3.0",
    "karma-phantomjs2-launcher": "^0.4.0",
    "karma-safari-launcher": "^0.1.1",
    "karma-sauce-launcher": "^0.2.10",
    "karma-spec-reporter": "0.0.23",
    "run-sequence": "^1.1.4",
    "webpack": "^1.12.9"
  },
  "directories": {},
  "dist": {
    "shasum": "69c827e9d6d6f41cf438d7f195e2e3cbfcf28c44",
    "tarball": "https://registry.npmjs.org/stacktrace-gps/-/stacktrace-gps-2.4.4.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "stacktrace-gps.js",
    "dist/",
    "node_modules/source-map/"
  ],
  "gitHead": "7712308cd40a5f64cde62845d30548569c46bd9d",
  "homepage": "https://www.stacktracejs.com",
  "keywords": [
    "stacktrace",
    "error",
    "debugger"
  ],
  "license": "Unlicense",
  "main": "./stacktrace-gps.js",
  "maintainers": [
    {
      "name": "Eric Wendelin",
      "email": "me@eriwen.com",
      "url": "http://www.eriwen.com"
    },
    {
      "name": "Victor Homyakov",
      "email": "vkhomyackov@gmail.com",
      "url": "https://github.com/victor-homyakov"
    },
    {
      "name": "Oliver Salzburg",
      "url": "https://github.com/oliversalzburg"
    }
  ],
  "name": "stacktrace-gps",
  "optionalDependencies": {},
  "readme": "stacktrace-gps - Turn partial code location into precise code location\n===================\n[![Build Status](https://travis-ci.org/stacktracejs/stacktrace-gps.svg?branch=master)](https://travis-ci.org/stacktracejs/stacktrace-gps) [![Coverage Status](https://img.shields.io/coveralls/stacktracejs/stacktrace-gps.svg)](https://coveralls.io/r/stacktracejs/stacktrace-gps) [![GitHub license](https://img.shields.io/github/license/stacktracejs/stacktrace-gps.svg)](http://unlicense.org)\n\nThis library accepts a code location (in the form of a [StackFrame](https://github.com/stacktracejs/stackframe)) and \nreturns a new StackFrame with a more accurate location (using [source maps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/)) and guessed function names.\n\n## Usage\n```js\nvar stackframe = new StackFrame(undefined, [], 'http://localhost:3000/file.min.js', 1, 3284);\nvar callback = function myCallback(foundFunctionName) { console.log(foundFunctionName); };\n\n// Such meta. Wow\nvar errback = function myErrback(error) { console.log(StackTrace.fromError(error)); };\n\nvar gps = new StackTraceGPS();\n\n// Pinpoint actual function name and source-mapped location\ngps.pinpoint(stackframe).then(callback, errback);\n=> Promise(StackFrame('fun', [], 'file.js', 203, 9), Error)\n\n// Better location/name information from source maps\ngps.getMappedLocation(stackframe).then(callback, errback);\n=> Promise(StackFrame(undefined, [], 'file.js', 203, 9), Error)\n\n// Get function name from location information\ngps.findFunctionName(stackframe).then(callback, errback);\n=> Promise(StackFrame('fun', [], 'http://localhost:3000/file.min.js', 1, 3284), Error)\n```\n\n## Installation\n```\nnpm install stacktrace-gps\nbower install stacktrace-gps\nhttps://raw.githubusercontent.com/stacktracejs/stacktrace-gps/master/dist/stacktrace-gps.min.js\n```\n\n## API\n\n#### `new StackTraceGPS(/*optional*/ options)` => StackTraceGPS\noptions: Object\n* **sourceCache: Object (String URL => String Source)** - Pre-populate source cache to avoid network requests\n* **offline: Boolean (default false)** - Set to `true` to prevent all network requests\n* **ajax: Function (String URL => Promise(responseText))** - Function to be used for making X-Domain requests\n* **atob: Function (String => String)** - Function to convert base64-encoded strings to their original representation\n \n#### `.pinpoint(stackframe)` => Promise(StackFrame)\nEnhance function name and use source maps to produce a better StackFrame.\n* **stackframe** - [StackFrame](https://github.com/stacktracejs/stackframe) or like object \ne.g. {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n \n#### `.findFunctionName(stackframe)` => Promise(StackFrame)\nEnhance function name and use source maps to produce a better StackFrame.\n* **stackframe** - [StackFrame](https://github.com/stacktracejs/stackframe) or like object\n \n#### `.getMappedLocation(stackframe)` => Promise(StackFrame)\nEnhance function name and use source maps to produce a better StackFrame.\n* **stackframe** - [StackFrame](https://github.com/stacktracejs/stackframe) or like object\n\n## Browser Support\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/stacktracejs.svg)](https://saucelabs.com/u/stacktracejs)\n\nFunctions that rely on [Source Maps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/)\n(`pinpoint` and `getMappedLocation`) require recent browsers.\n\n## Contributing\nWant to be listed as a *Contributor*? Start with the [Contributing Guide](CONTRIBUTING.md)!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/stacktracejs/stacktrace-gps.git"
  },
  "scripts": {
    "test": "gulp test"
  },
  "version": "2.4.4"
}
